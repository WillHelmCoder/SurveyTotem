@model Intelemark.Models.ProjectSettingsViewModel

@{
    /**/

    ViewBag.Title = "Call Queue Prioritization";
    int count = 1;
}

<link href="~/Scripts/app-assets/vendors/css/ui/dragula.min.css" rel="stylesheet" />
<link href="~/Scripts/app-assets/vendors/css/tables/extensions/rowReorder.dataTables.min.css" rel="stylesheet" />
<style>
    table.dataTable thead > tr > th.sorting_asc, table.dataTable thead > tr > th.sorting_desc, table.dataTable thead > tr > th.sorting, table.dataTable thead > tr > td.sorting_asc, table.dataTable thead > tr > td.sorting_desc, table.dataTable thead > tr > td.sorting {
        pointer-events: none;
    }

    td {
        text-align: center !important;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section id="description" class="card">
        <div class="card-header">
            <h4 class="card-title">@Model.Name Prioritization</h4>
            @Html.HiddenFor(x => x.Id, new { value= Model.Id, Id = "HdnProj"})
            <hr />
        </div>
        <div class="card-content" style="margin-top: -1.7%;">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-10 card-text">
                        <p>
                            Here you can establish a priority for the different Titles, Companies and/or SICs (Business types) found within this project.
                        </p>
                        <p>
                            You can easily <b>drag and drop</b> the rows in the tables so that the top priority is at the beginning on the table and the last priority is at the bottom. <br />
                            You can also rearrange de cards so that the leftmost one (with the "First priority" title) will be the field that the contacts are first sorted by and so on.
                        </p>
                    </div>
                    <div class="col-md-2 form-actions pull-right text-center">
                        <a href="@Url.Action("Index", "Projects")" class="btn btn-warning mr-1"> <i class="la la-ban"></i> Cancel</a>
                        <button id="btnsubmit" class="btn btn-success">
                            <i class="la la-check-square-o"></i> Save
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="row" id="card-drag-area">
        @foreach (var item in Model.ProjectPriorities)
        {
            <div class="col-md-4">
                <div class="card full-height">
                    <div class="card-header">
                        <h4 class="card-title"><span class="titleChange" data-order="@item.PriorityValue" data-fieldvalue="@item.Field">First priority</span> - @item.Field</h4>
                    </div>
                    <div class="card-content collapse show">
                        <div class="card-body">
                            <form class="form">
                                <div class="form-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <input class="form form-control ml-1" placeholder="New @item.Field priority tag" type="text" id="Input_@item.Field" />
                                        </div>
                                        <div class="col-md-6">
                                            <input type="button" class="btn btn-primary pull-right mr-1" onclick="AddNewRow(Table_@item.Field, Input_@item.Field)" value="Add">
                                        </div>
                                        <div class="col-md-12">
                                            <table  id="Table_@item.Field" class="table table-striped table-hover table-bordered table-dataTables">
                                                <thead>
                                                    <tr>
                                                        <th width="50">
                                                            Priority
                                                        </th>
                                                        <th>
                                                            @item.Field
                                                        </th>
                                                        <th>
                                                            
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    @foreach (var field in item.ProjectPriorityDetails)
                                                    {
                                                        <tr>
                                                            <td class="text-center">
                                                                @field.FieldPriorityValue
                                                            </td>
                                                            <td>
                                                                @if (String.IsNullOrEmpty(field.FieldValue))
                                                                {
                                                                    <text>
                                                                        Blank
                                                                    </text>
                                                                }
                                                                else
                                                                {
                                                                    @Html.DisplayFor(modelItem => field.FieldValue)
                                                                }
                                                            </td>
                                                            <td class="text-center" width="50px">
                                                                <a class="btn btn-danger la la-trash-o btn-sm text-white btndelete" onclick="DeleteRow(Table_@item.Field, this)"/>
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}



@section Scripts {
    <script src="~/Scripts/app-assets/js/scripts/tables/datatables-extensions/datatable-rowreorder.min.js"></script>
    <script src="~/Scripts/app-assets/vendors/js/extensions/dragula.min.js"></script>
    <script src="~/Scripts/app-assets/js/scripts/cards/draggable.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('.table-dataTables').DataTable({
                rowReorder: true,
                "paging": false,
                "info": false,
                searching: false
            });

            $("#card-drag-area").find('.titleChange').each(function (index) {
                var text = "";
                switch (index) {
                    case 0:
                        text = "First priority";
                        break;
                    case 1:
                        text = "Second priority";
                        break;
                    case 2:
                        text = "Third priority";
                        break;
                    default:
                        text = '';
                }
                this.innerHTML = text;
                $(this).attr("data-order", index + 1);
            });

        });

        $("#btnsubmit").click(function() {
            event.preventDefault();

            $.blockUI({
                message: '<div class="ft-refresh-cw icon-spin white font-large-1"></div>  <div style="color: white;"><strong>Saving...</strong></div>',
                overlayCSS: {
                    //  backgroundColor: '#FFF',
                    opacity: 0.6,
                    cursor: 'wait'
                },
                css: {
                    border: 0,
                    padding: 0,
                    backgroundColor: 'transparent'
                }
            });

        var z = [];

        $("#card-drag-area").find('.titleChange').each(function(element) {
            var x = {
                "PriorityValue": $(this).attr("data-order"),
                "Field": $(this).attr("data-fieldvalue")
            };
            z.push(x);
        })

        var y = [];

        $("#Table_Company").DataTable().data().each(function(element) {
            var x = {
                "FieldPriorityValue": element[0],
                "FieldValue": element[1],
                "Type": "Company"
            };
            y.push(x);
        })

        $("#Table_SIC").DataTable().data().each(function(element) {
            var x = {
                "FieldPriorityValue": element[0],
                "FieldValue": element[1],
                "Type": "SIC"
            };
            y.push(x);
        })

        $("#Table_Title").DataTable().data().each(function(element) {
            var x = {
                "FieldPriorityValue": element[0],
                "FieldValue": element[1],
                "Type": "Title"
            };
            y.push(x);
        })


        $.ajax({
            type: "POST",
            url: "/Projects/ProjectSettings",
            async: true,
            datatype: "text/json",
            data: {
                Id: @Model.Id,
                ProjectPriorities: z,
                ProjectPriorityDetails: y
            },
            success: function (result) {
                swal({
                    title: 'The project settings have been saved',
                    icon: "success",
                    buttons: {
                        catch: {
                            text: "Ok!",
                            value: true,
                            className: "btn-success"
                        }
                    }

                })
                    .then((value) => {
                        if (value) {
                            window.location.replace("/Projects/Index");
                        }
                    });
            }
        });

        });

        function AddNewRow(tableId, inputId)
        {

            var t = $(tableId).DataTable();
            var i = $(inputId).val();
            var x = t.rows().count() + 1;
            $(inputId).val('');
            t.row.add([
                x,
                i,
                '<a class="btn btn-danger la la-trash-o btn-sm text-white btndelete" onclick="DeleteRow(' + tableId.attributes.id.value + ', this)" />'
            ]).draw(false);
        }

        function DeleteRow(tableId, imgbtn) {
            var t = $(tableId).DataTable();
            t
                .row($(imgbtn).parents('tr'))
                .remove()
                .draw();
        }

    
    </script>
}
