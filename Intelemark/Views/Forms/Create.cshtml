@model Intelemark.Models.FormModel

@{
    /**/
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Create a Form</h4>
            </div>
            <div class="card-content collapse show">
                <div class="card-body">
                    <form class="form">
                        <div class="form-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <h4 class="form-section"><i class="ft-user-plus"></i> Basic Information</h4>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name)
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name to identify the form." } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Campaign</label>
                                        @Html.DropDownList("CampaignId", null, htmlAttributes: new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(model => model.CampaignId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description)
                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = "5", @placeholder = "Short description of this form." })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <h4 class="form-section"><i class="ft-user-plus"></i> Form Builder</h4>
                            <div class="row">
                                <div class="repeater col-md-12">
                                    <div data-repeater-list="outer-list">
                                        <div data-repeater-item class="form-control form-group">
                                            <div class="row mt-2">
                                                @*<div class="col-md-2">
            @Html.EnumDropDownListFor(x => x.QuestionType, null, new { @class = "form-control", @id = "TypeId", @name = "TypeId" })
        </div>*@

                                                <div class="col-md-2">
                                                    <select class="form-control" id="TypeId" name="TypeId">
                                                        <option value="0" selected>Open Answer</option>
                                                        <option value="1">Multiple Answer</option>
                                                        <option value="2">Selectable Answer</option>
                                                        <option value="3">Calendar Answer</option>
                                                        <option value="4">Calendar Time Answer</option>
                                                        <option value="5">Time Answer</option>
                                                    </select>
                                                </div>


                                                <div class="col-md-8">
                                                    <input type="text" name="Question" placeholder="Question" id="Question" class="form-control" />
                                                </div>
                                                <div class="col-md-2">
                                                    <button data-repeater-delete class="btn btn-danger btn-xs" type="button" value="Delete Question"><i class="ft-x"></i> Question</button>
                                                    <button onclick="FalseButon(this);" class="addAnswer btn btn-success btn-xs" type="button" value="Delete Question"><i class="ft-plus"></i> Answer</button>
                                                </div>
                                                <br />
                                                <br />
                                                <br />
                                                <div class="col-md-2">
                                                    <input type="text" name="Points" placeholder="Points" id="Points" class="form-control" />
                                                </div>
                                                <div class="col-md-5 ">
                                                    <input type="file" name="Image" placeholder="Image" id="Image" class="form-control questionImage" accept=".png, .jpg, .jpeg" />
                                                </div>
                                                <br />
                                                <br />
                                                <br />
                                                <br />
                                            </div>
                                            <!-- innner repeater -->
                                            <div class="inner-repeater ">
                                                <div data-repeater-list="Answers" name="Answers" class="drag">
                                                    <div data-repeater-item style="display:none;" class="form-group">
                                                        <div class="row">
                                                            <div class="col-md-10">
                                                                <input type="text" name="Answer" class="form-control" placeholder="Answer" id="Answer" value="----AnswerHidden----" />
                                                            </div>
                                                            <div class="col-md-2">
                                                                <button data-repeater-delete type="button" class="btn btn-danger btn-xs" value="Delete"><i class="ft-x"></i></button>
                                                                <span class="btn btn-warning btn-xs" value="Order"><i class="ft-move"></i></span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <button data-repeater-create type="button" class="hiddenAdd btn btn-warning btn-xs pull-right" style="visibility:hidden;" value="Add Answer"><i class="ft-plus"></i> Answer</button>
                                            </div>

                                        </div>
                                    </div>
                                    <br />
                                    <br />
                                    <hr />
                                    <br />
                                    <button data-repeater-create type="button" class="btn btn-success btn-xs block" value="Add Question"><i class="ft-plus"></i>New Question</button>
                                </div>
                                <!-- outer repeater -->


                            </div>
                            


                            <div class="form-actions pull-right">
                                <a href="@Url.Action("Index", "Forms")" class="btn btn-warning mr-1"> <i class="la la-ban"></i> Cancel</a>
                                <button type="button" onclick="saveData();" class="btn btn-success">
                                    <i class="la la-check-square-o"></i> Create
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}



<script>

</script>


@section scripts {
    <script>
        $(document).ready(function () {
            //   BotonFalso();
            $('.repeater').repeater({
                show: function () {
                    $(this).slideDown();
                },
                defaultValues: {
                    'TypeId': '0'
                },
                isFirstItemUndeletable: true,
                // (Required if there is a nested repeater)
                // Specify the configuration of the nested repeaters.
                // Nested configuration follows the same format as the base configuration,
                // supporting options "defaultValues", "show", "hide", etc.
                // Nested repeaters additionally require a "selector" field.
                repeaters: [{
                    show: function () {
                        $(this).slideDown();
                    },
                    // (Required)
                    // Specify the jQuery selector for this nested repeater
                    selector: '.inner-repeater'
                }]
            });
        });


        $(".drag").sortable({
            axis: "y",
            cursor: 'pointer',
            opacity: 0.5,
            placeholder: "row-dragging",
            delay: 150,
            update: function (event, ui) {
                console.log('repeaterVal');
                console.log(repeater.repeaterVal());
                console.log('serializeArray');
                console.log($('form').serializeArray());
            }
        }).disableSelection();

        function FalseButon(button) {
            var x = $(button).parent().parent().parent().find(".inner-repeater > .hiddenAdd");
            x.click();
            $(".drag").sortable({
                axis: "y",
                cursor: 'pointer',
                opacity: 0.5,
                placeholder: "row-dragging",
                delay: 150,
                update: function (event, ui) {
                    console.log('repeaterVal');
                    console.log(repeater.repeaterVal());
                    console.log('serializeArray');
                    console.log($('form').serializeArray());
                }
            }).disableSelection();
        }

        function saveData() {
            var arr = Object.values($('.repeater').repeaterVal());
            var images = document.getElementsByClassName("questionImage");
            var formdata = new FormData();
            var carpeta = uuidv4();
            for (i = 0; i < arr[0].length; i++) {
                if (images[i].files[0] != null) {
                    var uuid = uuidv4() + "." + images[i].files[0].name.split('.').pop();
                    var newPath = carpeta + "/" + uuid;
                    formdata.append(images[i].files[0].name, images[i].files[0], newPath);
                    arr[0][i].Image = "/Content/QuestionImages/" + newPath;
                }
            }
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/Forms/UploadImage');
            
            $.ajax({
                type: "POST",
                url: "/Forms/CreateForm",
                data: {
                    'Name': $('#Name').val(),
                    'CampaignId': $('#CampaignId').val(),
                    'Description': $('#Description').val(),
                    'Questions': arr[0],
                },
                success: function (data) {
                    xhr.send(formdata); // Posts images locally
                    swal({
                        title: 'The Form has been succesfully saved!',
                        icon: "success",
                        buttons: {
                            catch: {
                                text: "Ok!",
                                value: true,
                                className: "btn-success"
                            }
                        }
                    })
                        .then((value) => {
                            if (value) {
                                window.location.replace("/Forms/Index");
                            }
                        });
                },
                error: function (data) {
                    $(data.responseJSON).each(function (i, element) {
                        toastr.error(element);
                    });
                }
            });
        }
        // Universally Unique IDentifier
        function uuidv4() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
    </script>
}